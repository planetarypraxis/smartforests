# Generated by Django 3.2.25 on 2024-10-09 17:13

from django.db import migrations, models
import django.db.models.deletion

"""
Note: this migration will likely only work if you are
using the production image storage. Get these
credentials from render, or get a newer
database dump from production.

Unfortunately there was no way to make it work
for both production and local file storage.
"""

def copy_images_to_cms(apps, schema_editor):
    CmsImage = apps.get_model("smartforests", "CmsImage")
    models = [
        apps.get_model("logbooks", "EpisodePage"),
        apps.get_model("logbooks", "LogbookEntryPage"),
        apps.get_model("logbooks", "LogbookPage"),
        apps.get_model("logbooks", "PlaylistPage"),
        apps.get_model("logbooks", "StoryPage"),
    ]
    for model in models:
        items = model.objects.all()
        for item in items:
            if not str(item.thumbnail_image):
                item.thumbnail_image = None
                item.save()
                continue

            image_title = item.thumbnail_image.name
            existing_image = CmsImage.objects.filter(title=image_title).first()
            if existing_image:
                item.cms_thumbnail_image = existing_image
            else:
                item.cms_thumbnail_image = CmsImage(
                    alt_text=item.thumbnail_image.name,
                    title=item.thumbnail_image.name,
                    file=item.thumbnail_image,
                )
                item.cms_thumbnail_image.save()
            item.save()
            print(f"item {item} {item.thumbnail_image} {item.cms_thumbnail_image}")

def restore_thumbnail_images(apps, schema_editor):
    models = [
        apps.get_model("logbooks", "EpisodePage"),
        apps.get_model("logbooks", "LogbookEntryPage"),
        apps.get_model("logbooks", "LogbookPage"),
        apps.get_model("logbooks", "PlaylistPage"),
        apps.get_model("logbooks", "StoryPage"),
    ]
    for model in models:
        items = model.objects.all()
        for item in items:
            cms_image = item.thumbnail_image
            if cms_image:
                item.thumbnail_image = cms_image.file
                item.save()
                print(f"item {item} {item.thumbnail_image}")

class Migration(migrations.Migration):

    dependencies = [
        ('smartforests', '0019_alter_cmsimage_file'),
        ('logbooks', '0052_auto_20240821_1456'),
    ]

    operations = [
        migrations.AddField(
            model_name='episodepage',
            name='cms_thumbnail_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='smartforests.cmsimage'),
        ),
        migrations.AddField(
            model_name='logbookentrypage',
            name='cms_thumbnail_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='smartforests.cmsimage'),
        ),
        migrations.AddField(
            model_name='logbookpage',
            name='cms_thumbnail_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='smartforests.cmsimage'),
        ),
        migrations.AddField(
            model_name='playlistpage',
            name='cms_thumbnail_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='smartforests.cmsimage'),
        ),
        migrations.AddField(
            model_name='storypage',
            name='cms_thumbnail_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='smartforests.cmsimage'),
        ),
        migrations.RunPython(copy_images_to_cms, restore_thumbnail_images)
    ]
